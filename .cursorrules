# Cursor Rules

## Instructions

- Record fixes for mistakes or corrections to avoid repetition in the `Lessons` section.
- Organize thoughts and plan steps before starting a task in the `Scratchpad` section.
- Clear old tasks if necessary.
- Use todo markers for progress tracking:
  - `[X]` Completed tasks
  - `[ ]` Pending tasks
- Update Scratchpad after completing subtasks.
- Reflect and plan after milestones for better task management.
- Always refer to Scratchpad before planning the next step.

## Lessons

1. Use `npx shadcn@latest add [component]` instead of `npx shadcn-ui@latest add [component]` when installing Shadcn UI components.
2. In Next.js 14+, page props params must be typed as a Promise. Example:
   ```typescript
   type tParams = Promise<{ id: string }>
   interface PageProps {
     params: tParams
   }
   ```
   Then await the params in the component:
   ```typescript
   export default async function Page(props: PageProps) {
     const { id } = await props.params
   }
   ```
3. Use `const session = await auth()` instead of `const session = await getServerSession(authOptions)` for Next.js authentication. The new `auth()` function is the recommended way to get the session in Next.js Auth v5.
4. When importing `useRouter` from 'next/navigation', the component must be marked as a client component using the `'use client'` directive at the top of the file, as this hook only works on the client side.

## Scratchpad

### 1. Project Setup and Configuration [ ]

- [X] Initialize Next.js 15 project with TypeScript
- [X] Set up project structure and folders
- [X] Configure ESLint and Prettier
- [X] Install and configure dependencies:
  - [X] Install Shadcn UI:
    ```bash
    npx shadcn@latest init
    ```
  - [X] Install Lucide icons:
    ```bash
    npm install lucide-react
    ```
  - [X] Install Zod:
    ```bash
    npm install zod
    ```
  - [X] Install Zustand:
    ```bash
    npm install zustand
    ```
  - [X] Install Recharts:
    ```bash
    npm install recharts
    ```
  - [X] Install Resend:
    ```bash
    npm install resend
    ```
  - [X] Install Uploadthing:
    ```bash
    npm install uploadthing @uploadthing/react
    ```
  - [X] Install MongoDB and Mongoose:
    ```bash
    npm install mongoose
    ```
  - [X] Install NextAuth.js:
    ```bash
    npm install next-auth@beta
    ```
  - [X] Install Stripe:
    ```bash
    npm install stripe
    ```

### 2. Database and Authentication [ ]

- [X] Set up MongoDB database
- [X] Configure Mongoose schemas:
  - [X] User model
  - [X] Product model
  - [X] Category model
  - [X] Order model
  - [X] Review model
  - [X] Cart model
- [ ] Implement NextAuth.js authentication:
  - Email/Password
  - OAuth providers (Google, GitHub)
  - JWT handling
  - Protected routes

### 3. Core Features - Customer Side [ ]

- [ ] Home Layout:
  - Header with logo, search bar, and navigation
  - Footer with links and social media
- [ ] Homepage:
  - Featured products
  - Categories showcase
  - Special offers
- [ ] Products Catalog:
  - Product listing page
  - Filtering and sorting
  - Search functionality
  - Pagination
- [ ] Product Details:
  - Product information
  - Image gallery
  - Reviews and ratings
  - Related products
- [ ] Shopping Cart:
  - Add/remove items
  - Update quantities
  - Cart persistence
- [ ] Checkout Process:
  - Shipping information
  - Payment integration (Stripe)
  - Order confirmation
- [ ] User Dashboard:
  - Order history
  - Profile management
  - Saved addresses
  - Wishlist

### 4. Admin Dashboard [ ]

- [ ] Admin authentication and authorization
- [ ] Dashboard overview:
  - Sales analytics
  - Order statistics
  - Customer insights
  - Revenue charts
- [ ] Product management:
  - CRUD operations
  - Bulk actions
  - Image upload (Uploadthing)
- [ ] Order management:
  - Order processing
  - Status updates
  - Refund handling
- [ ] User management:
  - Customer list
  - Admin privileges
  - User actions

### 5. Advanced Features [ ]

- [ ] Real-time notifications
- [ ] Email system (Resend):
  - Order confirmations
  - Shipping updates
  - Password reset
- [ ] Search optimization
- [ ] Performance optimization:
  - Image optimization
  - Caching strategies
  - API optimization
- [ ] Analytics and reporting

### 6. Testing and Deployment [ ]

- [ ] Unit testing
- [ ] Integration testing
- [ ] E2E testing
- [ ] Security audit
- [ ] Production deployment:
  - Environment setup
  - CI/CD pipeline
  - Monitoring
  - Backup strategy

### 7. Documentation [ ]

- [ ] API documentation
- [ ] User guide
- [ ] Admin documentation
- [ ] Deployment guide